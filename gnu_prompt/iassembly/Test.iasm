
section .text ||
	
    """
	mov eax, "Hello Anoop Kutta"
	mov ebx, eax
	mov ecx, [ebx]
	link fptr, ecx
	call write, fptr
	
	mov eax, "anoop sinha"
	mov ebx, "is"
	mov ecx, "a"
	mov edx, "great"
	mov eex, "man"
	mov efx, " "
	
	mov eax, [eax, efx, ebx, efx, ecx, efx, edx, efx, eex]
	link fptr, eax
	call write, fptr
	
	mov exx, ["sale", "kutte", "jaan", "se", "Maar", "dunga", 47, "se", true, 22.22]
	mov ezx, ["kya re bhghmanya, ab bole sale"]
	link fptr, exx
	call write, fptr
	link fptr, ezx
	call write,  fptr
	
	
	compute vptr, [((2*5)*5)+((2*5)*5)]
	link eax, vptr
	mov ebx, [eax]
	link fptr, ebx
	call write, fptr
	
	

	cmp cptr, [(exx[1] == "kutte") && (exx[6] == 47)]
	[
		mov eax, true
		mov ebx, [eax]
		link fptr, ebx
		call write, fptr
	]
	elif cptr, [true==true]
	[
		mov eax, "partial"
		mov ebx, [eax]
		link fptr, ebx
		call write, fptr
	]
	else cptr
	[
		mov eax, false
		mov ebx, [eax]
		link fptr, ebx
		call write, fptr
	]
	"""
	
	"""
	compute vptr, [(5+5)]
	link eax, vptr
	compute vptr, [4+4]
	link ebx, vptr
	compute vptr, [3*9]
	link ecx, vptr
    	compute vptr, [(False & True) == True] // which is False
    	link efx, vptr
	
	mov edx, [eax, ebx, ecx, efx]
	link fptr, edx
	call write, fptr
	"""

	"""
	mov pas, 55 // moving 55 to persistantRegister
	mov pas, 5
	mov edx, [pas]

	link fptr, edx
	call write, fptr


	mov ras, 34 // move 43 in const ras
	mov rbs, [ras] // creating a constant list
	
	mov eax, rbs // moving const list to eax (eTypeReg)
	link fptr, eax
	call write, fptr

	// can not link (persistent type and constant type) to (f, v, c)PTR
	// mov works with all Types of register except (f, v, c) PTR
	// 'load' OpCode can load value to only from (v, f, c)PTR to ((e)Type register)
	// Today create load OpCode and array element access

	"""

	
	"""
	mov edx, "Enter Three Names :  "
	
	mov efx, [edx]
	mov egx, [0, 0, 0]

	link fptr, efx
	call write, fptr

	link fptr, egx
	call read, fptr
	
	// all return value from function will in rptr (in the form of list)
	
	load eax, rptr // get return value from read() function to rptr
	link fptr, eax
	
	
	call write, fptr
	"""
	
	// List ELement Access
	
	mov eax, 5
	mov ebx, 10
	mov ecx, 3

	mov edx, [eax, ebx, ecx]
	mov eex, #edx[2]

	link fptr, eex
	call write, fptrs

	mov edx, [eax, ebx, ecx]
	mov eex, #edx[2]

||